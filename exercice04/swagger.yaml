swagger: "2.0"
info:
  description: "A small service to store notes."
  version: "1.0.0"
  title: "MyNotes"
  contact:
    email: "hans-jorg.schurr@univ-lorraine.fr"
host: "localhost:8080"


definitions:
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 5
      label:
        example: "Important"
        type: "string"
        description: "Tag label"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 3
      label:
        type: "string"
        example: "Recipes"
        description: "Category label"
  Note:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 5
      title:
        type: "string"
        description: "Name of the note"
        example: "Chocolate Cake"
      body:
        type: "string"
        example: "Go to a supermarket. Buy a cake. Enjoy!"
        description: "Body of the note"
      category:
          $ref: "#/definitions/Category"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"

paths:
  /notes:
    get:
      tags:
      - Notes
      summary: "Get a list of all notes."
      description: "Lists all notes."
      produces:
      - "application/json"
      responses:
        "200":
          description: "A list of notes"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Note"
    post:
      tags:
      - Notes
      summary: "Create a note."
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Note object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Note"
      responses:
        "200":
          description: "The created note"
          schema:
            $ref: "#/definitions/Note"
        "406":
          description: "Structure of JSON is wrong"
  /notes/{id}:
    parameters:
      - name: id
        in: "path"
        description: "ID of note to delete"
        required: true
        type: "integer"
        format: "int64"
    get:
      tags:
      - Notes
      summary: "Get a specific note"
      produces:
      - "application/json"
      responses:
        "200":
          description: "The updated note"
          schema:
            $ref: "#/definitions/Note"
        "404":
          description: "Note not found"
    put:
      tags:
      - Notes
      consumes:
      - "application/json"
      summary: "Update a note"
      parameters:
      - in: "body"
        name: "body"
        description: "New body of the note"
        required: true
        schema:
          $ref: "#/definitions/Note"
      responses:
        "200":
          description: "The updated note"
          schema:
            $ref: "#/definitions/Note"
        "406":
          description: "Structure of JSON is wrong"
    delete:
      tags:
      - Notes
      summary: "Delete a specific note"
      responses:
        "200":
          description: "The note does not exist (anymore)."
  /tags:
    get:
      tags:
      - Tags
      summary: "Get a list of all tags"
      produces:
      - "application/json"
      responses:
        "200":
          description: "A list of all tags"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
    post:
      tags:
      - Tags
      summary: "Create a tag."
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Tag object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Tag"
      responses:
        "200":
          description: "The created tag."
          schema:
            $ref: "#/definitions/Tag"
        "406":
          description: "Structure of JSON is wrong"
  /tags/{id}:
    parameters:
    - name: id
      in: "path"
      description: "ID of the affected tag"
      required: true
      type: "integer"
      format: "int64"
    get:
      tags:
      - Tags
      summary: "Get a specific tag"
      produces:
      - "application/json"
      responses:
        "200":
          description: "The tag."
          schema:
            $ref: "#/definitions/Tag"
        "404":
          description: "Tag not found"
    put:
      summary: "Update a tag."
      tags:
      - Tags
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New body of the tag"
        required: true
        schema:
          $ref: "#/definitions/Tag"
      responses:
        "200":
          description: "The updated tag"
          schema:
            $ref: "#/definitions/Tag"
        "406":
          description: "Structure of JSON is wrong"
    delete:
      tags:
      - Tags
      summary: "Delete a specific tag"
      responses:
        "200":
          description: "The tag does not exist (anymore)."
  /tags/{id}/notes:
    parameters:
    - name: id
      in: "path"
      description: "ID of the affected tag"
      required: true
      type: "integer"
      format: "int64"
    get:
      tags:
      - Tags
      summary: "Get a list of all notes with this tag"
      produces:
      - "application/json"
      responses:
        "200":
          description: "A list of all notes"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Note"
  /cagegories:
    get:
      tags:
      - Categories
      summary: "Get a list of all categories"
      produces:
      - "application/json"
      responses:
        "200":
          description: "A list of all categories"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Category"
    post:
      summary: "Create a category"
      tags:
      - Categories
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Category object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        "200":
          description: "The created category."
          schema:
            $ref: "#/definitions/Category"
        "406":
          description: "Structure of JSON is wrong"
  /category/{id}:
    parameters:
    - name: id
      in: "path"
      description: "ID of the affected category"
      required: true
      type: "integer"
      format: "int64"
    get:
      tags:
      - Categories
      summary: "Get a specific category"
      produces:
      - "application/json"
      responses:
        "200":
          description: "The category."
          schema:
            $ref: "#/definitions/Category"
        "404":
          description: "Category not found"
    put:
      summary: "Update a category."
      tags:
      - Categories
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New body of the category"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        "200":
          description: "The updated category"
          schema:
            $ref: "#/definitions/Category"
        "406":
          description: "Structure of JSON is wrong"
    delete:
      tags:
      - Categories
      summary: "Delete a specific category"
      responses:
        "200":
          description: "The category does not exist (anymore)."
  /category/{id}/notes:
    parameters:
    - name: id
      in: "path"
      description: "ID of the affected category"
      required: true
      type: "integer"
      format: "int64"
    get:
      tags:
      - Categories
      summary: "Get a list of all notes in this category"
      produces:
      - "application/json"
      responses:
        "200":
          description: "A list of all notes"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Note"


